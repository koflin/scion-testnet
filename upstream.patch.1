diff --git a/private/underlay/conn/BUILD.bazel b/private/underlay/conn/BUILD.bazel
index 3c0395a86..74847c406 100644
--- a/private/underlay/conn/BUILD.bazel
+++ b/private/underlay/conn/BUILD.bazel
@@ -2,24 +2,18 @@ load("//tools/lint:go.bzl", "go_library")
 
 go_library(
     name = "go_default_library",
-    srcs = ["conn.go"],
+    srcs = [
+        "conn.go",
+        "flags.go",
+        "flags_linux.go",
+    ],
     importpath = "github.com/scionproto/scion/private/underlay/conn",
     visibility = ["//visibility:public"],
-    deps = select({
-        "@io_bazel_rules_go//go/platform:android": [
-            "//pkg/log:go_default_library",
-            "//pkg/private/serrors:go_default_library",
-            "//private/underlay/sockctrl:go_default_library",
-            "@org_golang_x_net//ipv4:go_default_library",
-            "@org_golang_x_net//ipv6:go_default_library",
-        ],
-        "@io_bazel_rules_go//go/platform:linux": [
-            "//pkg/log:go_default_library",
-            "//pkg/private/serrors:go_default_library",
-            "//private/underlay/sockctrl:go_default_library",
-            "@org_golang_x_net//ipv4:go_default_library",
-            "@org_golang_x_net//ipv6:go_default_library",
-        ],
-        "//conditions:default": [],
-    }),
+    deps = [
+        "//pkg/log:go_default_library",
+        "//pkg/private/serrors:go_default_library",
+        "//private/underlay/sockctrl:go_default_library",
+        "@org_golang_x_net//ipv4:go_default_library",
+        "@org_golang_x_net//ipv6:go_default_library",
+    ],
 )
diff --git a/private/underlay/conn/conn.go b/private/underlay/conn/conn.go
index c56c30225..4d81eeff5 100644
--- a/private/underlay/conn/conn.go
+++ b/private/underlay/conn/conn.go
@@ -13,8 +13,8 @@
 // See the License for the specific language governing permissions and
 // limitations under the License.
 
-//go:build go1.9 && linux
-// +build go1.9,linux
+//go:build go1.9
+// +build go1.9
 
 // Package conn implements underlay sockets.
 package conn
@@ -95,7 +95,7 @@ func newConnUDPIPv4(listen, remote *net.UDPAddr, cfg *Config) (*connUDPIPv4, err
 // ReadBatch reads up to len(msgs) packets, and stores them in msgs.
 // It returns the number of packets read, and an error if any.
 func (c *connUDPIPv4) ReadBatch(msgs Messages) (int, error) {
-	n, err := c.pconn.ReadBatch(msgs, syscall.MSG_WAITFORONE)
+	n, err := c.pconn.ReadBatch(msgs, syscallMSG_WAITFORONE)
 	return n, err
 }
 
@@ -133,7 +133,7 @@ func newConnUDPIPv6(listen, remote *net.UDPAddr, cfg *Config) (*connUDPIPv6, err
 // ReadBatch reads up to len(msgs) packets, and stores them in msgs.
 // It returns the number of packets read, and an error if any.
 func (c *connUDPIPv6) ReadBatch(msgs Messages) (int, error) {
-	n, err := c.pconn.ReadBatch(msgs, syscall.MSG_WAITFORONE)
+	n, err := c.pconn.ReadBatch(msgs, syscallMSG_WAITFORONE)
 	return n, err
 }
 
diff --git a/private/underlay/conn/flags.go b/private/underlay/conn/flags.go
new file mode 100644
index 000000000..a0b9e6926
--- /dev/null
+++ b/private/underlay/conn/flags.go
@@ -0,0 +1,20 @@
+// Copyright 2024 ETH Zurich
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//   http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+//go:build !linux
+// +build !linux
+
+package conn
+
+const syscallMSG_WAITFORONE = 0
diff --git a/private/underlay/conn/flags_linux.go b/private/underlay/conn/flags_linux.go
new file mode 100644
index 000000000..e9f3bd9f9
--- /dev/null
+++ b/private/underlay/conn/flags_linux.go
@@ -0,0 +1,22 @@
+// Copyright 2024 ETH Zurich
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//   http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+
+//go:build linux
+// +build linux
+
+package conn
+
+import "syscall"
+
+const syscallMSG_WAITFORONE = syscall.MSG_WAITFORONE
